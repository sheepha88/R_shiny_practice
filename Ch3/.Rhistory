shiny::runApp()
install.packages("languageserver")
runApp()
q()
shiny::runApp()
# Run the application
shinyApp(ui = ui, server = server)
q()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shiny)
ui <- fluidPage(
"Hello, world!"
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
runApp('test')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("C:/R_Shiny_prac/R_shiny/app.R", echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(ggplot)
install.packages("ggplot2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
class(1)
class(1L)
class(1.1L)
install.packages("data.table")
shiny::runApp()
runApp()
shiny::runApp()
shinyApp(ui, server)
q()
shiny::runApp()
runApp()
runApp()
runApp()
source("C:/R_Shiny_prac/R_shiny/Ch3/app.R", echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("C:/R_Shiny_prac/R_shiny/Ch3/app.R", echo=TRUE)
runApp()
runApp()
print("u"+"i")
1+2
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(freqpoly)
install.packages(freqpoly())
install.packages(ggplot2)
install.packages("ggplot2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(stats)
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
